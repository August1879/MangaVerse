"use strict";(()=>{var e={};e.id=153,e.ids=[153],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5195:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>w,patchFetch:()=>h,requestAsyncStorage:()=>g,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var s={};t.r(s),t.d(s,{GET:()=>u,POST:()=>d});var a=t(9303),o=t(8716),n=t(670),i=t(7070),p=t(6318);async function u(e){let r=Number(new URL(e.url).searchParams.get("workId")||0),t=await p.Z.readingProgress.findFirst({where:{workId:r}});return i.NextResponse.json({ok:!0,data:t})}async function d(e){let{workId:r,chapterIndex:t=0,pageIndex:s=0,progressNormalized:a=0}=await e.json().catch(()=>({}));return r?(await p.Z.readingProgress.upsert({where:{userId_workId:{userId:1,workId:r}},create:{userId:1,workId:r,progress:Number(a),chapterIndex:t,pageIndex:s},update:{progress:Number(a),chapterIndex:t,pageIndex:s,updatedAt:new Date}}),i.NextResponse.json({ok:!0})):i.NextResponse.json({ok:!1,error:"workId required"},{status:400})}let c=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/progress/route",pathname:"/api/progress",filename:"route",bundlePath:"app/api/progress/route"},resolvedPagePath:"/workspaces/MangaVerse/app/api/progress/route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:l,serverHooks:m}=c,w="/api/progress/route";function h(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}},6318:(e,r,t)=>{t.d(r,{Z:()=>a});let s=require("@prisma/client"),a=globalThis.prisma||new s.PrismaClient({log:["query","error","warn"]})}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972],()=>t(5195));module.exports=s})();